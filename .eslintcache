[{"D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\index.js":"1","D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\components\\App.js":"2","D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\components\\SortingVisualizer.js":"3","D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\components\\Header.js":"4","D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\components\\HeaderCategoryDropdown.js":"5","D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\data.js":"6","D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\sortingAlgorithms\\mergeSort.js":"7","D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\sortingAlgorithms\\heapSort.js":"8","D:\\comit-final-project\\sorting-visualizer-react\\src\\index.js":"9","D:\\comit-final-project\\sorting-visualizer-react\\src\\components\\App.js":"10","D:\\comit-final-project\\sorting-visualizer-react\\src\\components\\SortingVisualizer.js":"11","D:\\comit-final-project\\sorting-visualizer-react\\src\\components\\Header.js":"12","D:\\comit-final-project\\sorting-visualizer-react\\src\\data.js":"13","D:\\comit-final-project\\sorting-visualizer-react\\src\\sortingAlgorithms\\mergeSort.js":"14","D:\\comit-final-project\\sorting-visualizer-react\\src\\sortingAlgorithms\\heapSort.js":"15","D:\\comit-final-project\\sorting-visualizer-react\\src\\components\\HeaderCategoryDropdown.js":"16"},{"size":229,"mtime":1607712125207,"results":"17","hashOfConfig":"18"},{"size":800,"mtime":1607794297206,"results":"19","hashOfConfig":"18"},{"size":3755,"mtime":1607815318653,"results":"20","hashOfConfig":"18"},{"size":627,"mtime":1607712600964,"results":"21","hashOfConfig":"18"},{"size":1066,"mtime":1607712606896,"results":"22","hashOfConfig":"18"},{"size":652,"mtime":1607713058599,"results":"23","hashOfConfig":"18"},{"size":2885,"mtime":1607741564010,"results":"24","hashOfConfig":"18"},{"size":1339,"mtime":1607814306719,"results":"25","hashOfConfig":"18"},{"size":229,"mtime":1607712125207,"results":"26","hashOfConfig":"27"},{"size":800,"mtime":1607794297206,"results":"28","hashOfConfig":"27"},{"size":3755,"mtime":1607815318653,"results":"29","hashOfConfig":"27"},{"size":627,"mtime":1607712600964,"results":"30","hashOfConfig":"27"},{"size":652,"mtime":1607713058599,"results":"31","hashOfConfig":"27"},{"size":2885,"mtime":1607741564010,"results":"32","hashOfConfig":"27"},{"size":1339,"mtime":1607814306719,"results":"33","hashOfConfig":"27"},{"size":1066,"mtime":1607712606896,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1m0ofk2",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ct8sc6",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\index.js",[],["71","72"],"D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\components\\App.js",["73"],"import React, { useState, useEffect } from \"react\";\r\nimport SortingVisualizer from '../components/SortingVisualizer';\r\nimport Header from '../components/Header';\r\nimport { getSortingAlgosList } from '../data';\r\nimport { getSearchingAlgosList } from '../data';\r\n\r\nexport default function App() {\r\n    const [algo, setAlgo] = useState('');\r\n    const sortingAlgos= getSortingAlgosList();\r\n    const searchingAlgos= getSearchingAlgosList();\r\n    const handleSelectedAlgo = (algo) => {\r\n        console.log(algo);\r\n       setAlgo(algo);\r\n      \r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n        <Header sorting={sortingAlgos} searching={searchingAlgos} handleSelectedAlgo={handleSelectedAlgo} />\r\n  \r\n        <SortingVisualizer algo={algo}></SortingVisualizer>\r\n      </div>\r\n    );\r\n}\r\n","D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\components\\SortingVisualizer.js",["74","75","76"],"import React, { useState, useEffect } from \"react\";\r\nimport {getMergeSortAnimations} from '../sortingAlgorithms/mergeSort.js';\r\nimport {heap_Sort} from '../sortingAlgorithms/heapSort.js';\r\n\r\n// Change this value for the speed of the animations.\r\nconst ANIMATION_SPEED_MS = 1;\r\n\r\n// Change this value for the number of bars (value) in the array.\r\nconst NUMBER_OF_ARRAY_BARS = 70;\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = 'turquoise';\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = 'red';\r\n\r\n\r\nexport default function SortingVisualizer(props) {\r\n    const [arr, setArr] = useState([]);\r\n    const [color, setColor] = useState('turquoise');\r\n    useEffect(() => {\r\n        resetArray();\r\n      }, []);\r\n      useEffect(() => {\r\n        if(props.algo==='Merge Sort'){\r\n            mergeSort();\r\n        }\r\n        if(props.algo==='Bubble Sort'){\r\n          mergeSort();\r\n      }\r\n      if(props.algo==='Quick Sort'){\r\n        mergeSort();\r\n    }\r\n    if(props.algo==='Heap Sort'){\r\n      heapSort();\r\n  }\r\n      }, [props.algo]);\r\n    function resetArray() {\r\n        const array = [];\r\n        for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n          array.push(randomIntFromInterval(5, 730));\r\n        }\r\n        setArr(array);\r\n      }\r\n      function randomIntFromInterval(min, max) {\r\n        // min and max included\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n      }\r\n      function heapSort()\r\n      {\r\n        const animations= heap_Sort(arr);\r\n        console.log(animations);\r\n        for (let i = 0; i < animations.length; i++) {\r\n          const arrayBars = document.getElementsByClassName('array-bar');\r\n         \r\n            setTimeout(() => {\r\n              const [barOneIdx, barOneValue, barTwoIdx, barTwoValue] = animations[i];\r\n              const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n              barOneStyle.width = `${barTwoValue}px`;\r\n              barTwoStyle.width = `${barOneValue}px`;\r\n            }, i * ANIMATION_SPEED_MS);\r\n            \r\n        }\r\n      }\r\n\r\n      function mergeSort() {\r\n        const animations = getMergeSortAnimations(arr);\r\n        for (let i = 0; i < animations.length; i++) {\r\n          const arrayBars = document.getElementsByClassName('array-bar');\r\n          const isColorChange = i % 3 !== 2;\r\n          if (isColorChange) {\r\n            const [barOneIdx, barTwoIdx] = animations[i];\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            // const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n            setColor(i % 3 === 0 ? 'red' : 'yellow');\r\n            console.log(color);\r\n            setTimeout(() => {\r\n              barOneStyle.backgroundColor = color;\r\n              barTwoStyle.backgroundColor = color;\r\n            }, i * ANIMATION_SPEED_MS);\r\n          } else {\r\n            setTimeout(() => {\r\n              const [barOneIdx, newHeight] = animations[i];\r\n              const barOneStyle = arrayBars[barOneIdx].style;\r\n              barOneStyle.width = `${newHeight}px`;\r\n            }, i * ANIMATION_SPEED_MS);\r\n          }\r\n        }\r\n      }\r\n      \r\n    \r\n    return (\r\n        <div className=\"items\">\r\n            {props.algo}\r\n            <ul className=\"items-list\">\r\n        {arr.map((value, idx) => (\r\n          <li>\r\n            <div\r\n            className=\"array-bar\"\r\n            key={idx}\r\n            style={{\r\n              backgroundColor: PRIMARY_COLOR,\r\n              width: `${value}px`,\r\n            }}></div></li>\r\n        ))}\r\n       \r\n      </ul>\r\n        </div>\r\n    );\r\n}\r\n","D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\components\\Header.js",[],"D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\components\\HeaderCategoryDropdown.js",[],["77","78"],"D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\data.js",[],"D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\sortingAlgorithms\\mergeSort.js",[],"D:\\comit-final-project\\ds-algos-visualizer-react\\applications\\sorting-visualizer-react\\src\\sortingAlgorithms\\heapSort.js",[],"D:\\comit-final-project\\sorting-visualizer-react\\src\\index.js",[],"D:\\comit-final-project\\sorting-visualizer-react\\src\\components\\App.js",["79"],"D:\\comit-final-project\\sorting-visualizer-react\\src\\components\\SortingVisualizer.js",["80","81","82"],"D:\\comit-final-project\\sorting-visualizer-react\\src\\components\\Header.js",[],"D:\\comit-final-project\\sorting-visualizer-react\\src\\data.js",[],"D:\\comit-final-project\\sorting-visualizer-react\\src\\sortingAlgorithms\\mergeSort.js",[],"D:\\comit-final-project\\sorting-visualizer-react\\src\\sortingAlgorithms\\heapSort.js",[],"D:\\comit-final-project\\sorting-visualizer-react\\src\\components\\HeaderCategoryDropdown.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"91","line":15,"column":7,"nodeType":"89","messageId":"90","endLine":15,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":23,"column":10,"nodeType":"94","endLine":23,"endColumn":12,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":37,"column":10,"nodeType":"94","endLine":37,"endColumn":22,"suggestions":"97"},{"ruleId":"83","replacedBy":"98"},{"ruleId":"85","replacedBy":"99"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"91","line":15,"column":7,"nodeType":"89","messageId":"90","endLine":15,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":23,"column":10,"nodeType":"94","endLine":23,"endColumn":12,"suggestions":"100"},{"ruleId":"92","severity":1,"message":"96","line":37,"column":10,"nodeType":"94","endLine":37,"endColumn":22,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'SECONDARY_COLOR' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resetArray'. Either include it or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has missing dependencies: 'heapSort' and 'mergeSort'. Either include them or remove the dependency array.",["105"],["102"],["103"],["106"],["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"108","fix":"112"},{"desc":"110","fix":"113"},"Update the dependencies array to be: [resetArray]",{"range":"114","text":"115"},"Update the dependencies array to be: [heapSort, mergeSort, props.algo]",{"range":"116","text":"117"},{"range":"118","text":"115"},{"range":"119","text":"117"},[791,793],"[resetArray]",[1108,1120],"[heapSort, mergeSort, props.algo]",[791,793],[1108,1120]]